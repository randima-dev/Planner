openapi: 3.0.0
info:
  title: Hotel Management API
  description: This is a sample server for managing hotels.
  version: "1.0.0"
servers:
  - url: 'http://localhost:3000/api'
    description: Development server
paths:
  /hotels:
    get:
      summary: List all hotels
      operationId: getHotels
      responses:
        '200':
          description: An array of hotels
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hotel'
    post:
      summary: Create a new hotel
      operationId: createHotel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hotel'
      responses:
        '201':
          description: Hotel created
  /hotels/{id}:
    get:
      summary: Get a hotel by ID
      operationId: getHotelById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A single hotel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotel'
        '404':
          description: Hotel not found
    put:
      summary: Update a hotel
      operationId: updateHotel
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hotel'
      responses:
        '200':
          description: Hotel updated
    delete:
      summary: Delete a hotel
      operationId: deleteHotel
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Hotel deleted
components:
  schemas:
    Hotel:
      type: object
      required:
        - title
        - createdDate
        - isLiked
        - text
        - imageUrl
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        createdDate:
          type: string
        isLiked:
          type: boolean
        text:
          type: string
        imageUrl:
          type: string
